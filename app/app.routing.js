"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var router_1 = require("nativescript-angular/router");
var app_component_1 = require("./app.component");
var login_component_1 = require("./components/login/login.component");
var home_component_1 = require("./components/home/home.component");
var customer_component_1 = require("./components/customer/customer.component");
var itemInquiry_component_1 = require("./components/itemsInquiry/itemInquiry.component");
var sync_component_1 = require("./components/Sync/sync.component");
var sendData_component_1 = require("./components/sendData/sendData.component");
var reviewTransaction_component_1 = require("./components/reviewTransaction/reviewTransaction.component");
var routes = [
    { path: "", redirectTo: "/home", pathMatch: "full" },
    { path: "app", component: app_component_1.AppComponent },
    { path: "login", component: login_component_1.LoginComponent },
    { path: "home", component: home_component_1.HomeComponent },
    { path: "itemInquiry", component: itemInquiry_component_1.ItemInquiryComponent },
    { path: "sync", component: sync_component_1.SyncComponent },
    { path: "sendData", component: sendData_component_1.SendDataComponent },
    { path: "customer", component: customer_component_1.CustomerComponent },
    { path: "reviewTransaction", component: reviewTransaction_component_1.ReviewTransactionComponent },
];
var AppRoutingModule = /** @class */ (function () {
    function AppRoutingModule() {
    }
    AppRoutingModule = __decorate([
        core_1.NgModule({
            imports: [router_1.NativeScriptRouterModule.forRoot(routes)],
            exports: [router_1.NativeScriptRouterModule]
        })
    ], AppRoutingModule);
    return AppRoutingModule;
}());
exports.AppRoutingModule = AppRoutingModule;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBwLnJvdXRpbmcuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJhcHAucm91dGluZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLHNDQUF5QztBQUN6QyxzREFBdUU7QUFFdkUsaURBQStDO0FBQy9DLHNFQUFvRTtBQUNwRSxtRUFBaUU7QUFDakUsK0VBQTZFO0FBQzdFLHlGQUF1RjtBQUN2RixtRUFBaUU7QUFDakUsK0VBQTZFO0FBQzdFLDBHQUF3RztBQUV4RyxJQUFNLE1BQU0sR0FBVztJQUNuQixFQUFFLElBQUksRUFBRSxFQUFFLEVBQUUsVUFBVSxFQUFFLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxFQUFFO0lBQ3BELEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRSxTQUFTLEVBQUUsNEJBQVksRUFBRTtJQUN4QyxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUUsU0FBUyxFQUFFLGdDQUFjLEVBQUU7SUFDNUMsRUFBRSxJQUFJLEVBQUUsTUFBTSxFQUFFLFNBQVMsRUFBQyw4QkFBYSxFQUFDO0lBQ3hDLEVBQUUsSUFBSSxFQUFFLGFBQWEsRUFBRSxTQUFTLEVBQUMsNENBQW9CLEVBQUM7SUFDdEQsRUFBRSxJQUFJLEVBQUUsTUFBTSxFQUFFLFNBQVMsRUFBQyw4QkFBYSxFQUFDO0lBQ3hDLEVBQUUsSUFBSSxFQUFFLFVBQVUsRUFBRSxTQUFTLEVBQUMsc0NBQWlCLEVBQUM7SUFDaEQsRUFBRSxJQUFJLEVBQUUsVUFBVSxFQUFFLFNBQVMsRUFBRSxzQ0FBaUIsRUFBQztJQUNqRCxFQUFFLElBQUksRUFBRSxtQkFBbUIsRUFBRSxTQUFTLEVBQUMsd0RBQTBCLEVBQUM7Q0FDckUsQ0FBQztBQU1GO0lBQUE7SUFBZ0MsQ0FBQztJQUFwQixnQkFBZ0I7UUFKNUIsZUFBUSxDQUFDO1lBQ04sT0FBTyxFQUFFLENBQUMsaUNBQXdCLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1lBQ25ELE9BQU8sRUFBRSxDQUFDLGlDQUF3QixDQUFDO1NBQ3RDLENBQUM7T0FDVyxnQkFBZ0IsQ0FBSTtJQUFELHVCQUFDO0NBQUEsQUFBakMsSUFBaUM7QUFBcEIsNENBQWdCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xyXG5pbXBvcnQgeyBOYXRpdmVTY3JpcHRSb3V0ZXJNb2R1bGUgfSBmcm9tIFwibmF0aXZlc2NyaXB0LWFuZ3VsYXIvcm91dGVyXCI7XHJcbmltcG9ydCB7IFJvdXRlcyB9IGZyb20gXCJAYW5ndWxhci9yb3V0ZXJcIjtcclxuaW1wb3J0IHsgQXBwQ29tcG9uZW50IH0gZnJvbSBcIi4vYXBwLmNvbXBvbmVudFwiO1xyXG5pbXBvcnQgeyBMb2dpbkNvbXBvbmVudCB9IGZyb20gXCIuL2NvbXBvbmVudHMvbG9naW4vbG9naW4uY29tcG9uZW50XCI7XHJcbmltcG9ydCB7IEhvbWVDb21wb25lbnQgfSBmcm9tIFwiLi9jb21wb25lbnRzL2hvbWUvaG9tZS5jb21wb25lbnRcIjtcclxuaW1wb3J0IHsgQ3VzdG9tZXJDb21wb25lbnQgfSBmcm9tIFwiLi9jb21wb25lbnRzL2N1c3RvbWVyL2N1c3RvbWVyLmNvbXBvbmVudFwiO1xyXG5pbXBvcnQgeyBJdGVtSW5xdWlyeUNvbXBvbmVudCB9IGZyb20gXCIuL2NvbXBvbmVudHMvaXRlbXNJbnF1aXJ5L2l0ZW1JbnF1aXJ5LmNvbXBvbmVudFwiO1xyXG5pbXBvcnQgeyBTeW5jQ29tcG9uZW50IH0gZnJvbSBcIi4vY29tcG9uZW50cy9TeW5jL3N5bmMuY29tcG9uZW50XCI7XHJcbmltcG9ydCB7IFNlbmREYXRhQ29tcG9uZW50IH0gZnJvbSBcIi4vY29tcG9uZW50cy9zZW5kRGF0YS9zZW5kRGF0YS5jb21wb25lbnRcIjtcclxuaW1wb3J0IHsgUmV2aWV3VHJhbnNhY3Rpb25Db21wb25lbnQgfSBmcm9tIFwiLi9jb21wb25lbnRzL3Jldmlld1RyYW5zYWN0aW9uL3Jldmlld1RyYW5zYWN0aW9uLmNvbXBvbmVudFwiO1xyXG5cclxuY29uc3Qgcm91dGVzOiBSb3V0ZXMgPSBbXHJcbiAgICB7IHBhdGg6IFwiXCIsIHJlZGlyZWN0VG86IFwiL2hvbWVcIiwgcGF0aE1hdGNoOiBcImZ1bGxcIiB9LFxyXG4gICAgeyBwYXRoOiBcImFwcFwiLCBjb21wb25lbnQ6IEFwcENvbXBvbmVudCB9LFxyXG4gICAgeyBwYXRoOiBcImxvZ2luXCIsIGNvbXBvbmVudDogTG9naW5Db21wb25lbnQgfSxcclxuICAgIHsgcGF0aDogXCJob21lXCIsIGNvbXBvbmVudDpIb21lQ29tcG9uZW50fSxcclxuICAgIHsgcGF0aDogXCJpdGVtSW5xdWlyeVwiLCBjb21wb25lbnQ6SXRlbUlucXVpcnlDb21wb25lbnR9LFxyXG4gICAgeyBwYXRoOiBcInN5bmNcIiwgY29tcG9uZW50OlN5bmNDb21wb25lbnR9LFxyXG4gICAgeyBwYXRoOiBcInNlbmREYXRhXCIsIGNvbXBvbmVudDpTZW5kRGF0YUNvbXBvbmVudH0sXHJcbiAgICB7IHBhdGg6IFwiY3VzdG9tZXJcIiwgY29tcG9uZW50OiBDdXN0b21lckNvbXBvbmVudH0sXHJcbiAgICB7IHBhdGg6IFwicmV2aWV3VHJhbnNhY3Rpb25cIiwgY29tcG9uZW50OlJldmlld1RyYW5zYWN0aW9uQ29tcG9uZW50fSxcclxuXTtcclxuXHJcbkBOZ01vZHVsZSh7XHJcbiAgICBpbXBvcnRzOiBbTmF0aXZlU2NyaXB0Um91dGVyTW9kdWxlLmZvclJvb3Qocm91dGVzKV0sXHJcbiAgICBleHBvcnRzOiBbTmF0aXZlU2NyaXB0Um91dGVyTW9kdWxlXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgQXBwUm91dGluZ01vZHVsZSB7IH0iXX0=